import React from "react";
import SlideToConfirm from "./SlideToConfirm";
import { type Product } from "../data/catalog";
import { LAYOUT } from "../lib/layout";

type CartItem = { product: Product; qty: number };

type CartPanelProps = {
  items: CartItem[];
  onInc: (id: string) => void;
  onDec: (id: string) => void;
  onConfirm: () => void;
  paymentMethods?: { id: string; name: string; icon?: string }[];
  selectedPay: string;
  onChangePay: (id: string) => void;
};

export default function CartPanel({
  items,
  onInc,
  onDec,
  onConfirm,
  paymentMethods = [
    { id: "cash", name: "現金" },
    { id: "card", name: "カード" },
    { id: "qr",  name: "QR"    },
  ],
  selectedPay,
  onChangePay,
}: CartPanelProps) {
  const total = items.reduce((s, it) => s + it.product.price * it.qty, 0);
  const selectedPayName = paymentMethods.find(m => m.id === selectedPay)?.name ?? "—";

  const handlePayClick = (e: React.MouseEvent, id: string) => {
    e.preventDefault();
    e.stopPropagation();
    onChangePay(id);
  };
  const handleDec = (e: React.MouseEvent, id: string) => {
    e.preventDefault();
    e.stopPropagation();
    onDec(id);
  };
  const handleInc = (e: React.MouseEvent, id: string) => {
    e.preventDefault();
    e.stopPropagation();
    onInc(id);
  };

  return (
    <div className="h-full flex flex-col gap-3" onClickCapture={(e) => e.stopPropagation()}>
      {/* 支払い方法（アイコンの間隔・径は LAYOUT） */}
      <div className="ios-section p-2">
        <div className="flex items-center justify-between gap-2">
          <div
            className="flex items-center flex-wrap"
            role="radiogroup"
            aria-label="支払い方法"
            style={{ gap: LAYOUT.paymentIconGapPx }}
          >
            {paymentMethods.map((m) => {
              const active = m.id === selectedPay;
              return (
                <button
                  key={m.id}
                  type="button"
                  onClick={(e) => handlePayClick(e, m.id)}
                  onMouseDown={(e) => { e.preventDefault(); e.stopPropagation(); }}
                  className="flex flex-col items-center gap-1 ui-focus"
                  role="radio"
                  aria-checked={active}
                  aria-label={"支払い方法 " + m.name}
                >
                  <div
                    className={"btn-radio-icon " + (active ? "btn-radio-active" : "")}
                    style={{ width: LAYOUT.payIconPx, height: LAYOUT.payIconPx }}
                  >
                    {m.icon ? <span>{m.icon}</span> : <span>{m.name[0]}</span>}
                  </div>
                  <div className={"btn-radio-label " + (active ? "text-neutral-900" : "")}>{m.name}</div>
                </button>
              );
            })}
          </div>

          <div className="shrink-0 flex items-center gap-2 text-[12px] text-neutral-600">
            <span>選択中</span>
            <span className="ios-chip">{selectedPayName}</span>
          </div>
        </div>
      </div>

      {/* 注文リスト */}
      <div className="ios-section flex-1 overflow-auto">
        {items.length === 0 ? (
          <div className="p-3 text-[12px] text-neutral-500">まだ商品がありません</div>
        ) : (
          <ul>
            {items.map((it, idx) => (
              <li key={it.product.id} className={"px-3 py-2 " + (idx>0 ? "ios-sep " : "") + "flex items-center gap-2"}>
                <div className="flex-1 min-w-0">
                  <div className="truncate text-[13px]">{it.product.name}</div>
                  <div className="text-[11px] text-neutral-500">¥{it.product.price.toLocaleString()}</div>
                </div>
                <div className="flex items-center gap-1.5">
                  <button
                    type="button"
                    onClick={(e) => handleDec(e, it.product.id)}
                    className="btn-round-sm"
                    aria-label={it.product.name + " を1つ減らす"}
                  >
                    −
                  </button>
                  <div className="w-6 text-center text-xs">{it.qty}</div>
                  <button
                    type="button"
                    onClick={(e) => handleInc(e, it.product.id)}
                    className="btn-round-sm"
                    aria-label={it.product.name + " を1つ増やす"}
                  >
                    ＋
                  </button>
                </div>
              </li>
            ))}
          </ul>
        )}
      </div>

      {/* 合計 */}
      <div className="ios-section px-3 py-2 flex items-center justify-between">
        <span className="text-[13px]">合計</span>
        <span className="text-[15px] font-semibold">¥{total.toLocaleString()}</span>
      </div>

      {/* スライドして決済 */}
      <SlideToConfirm onConfirm={onConfirm} />
    </div>
  );
}
